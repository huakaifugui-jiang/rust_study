# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
# 即使你选择了一个唯一的名称，如果此时尝试运行 cargo publish 发布该 crate 的话，会得到一个警告接着是一个错误
# 这是因为我们缺少一些关键信息：关于该 crate 用途的描述和用户可能在何种条款下使用该 crate 的 license。为了修正这个错误，需要在 Cargo.toml 中引入这些信息。
# 描述通常是一两句话，因为它会出现在 crate 的搜索结果中和 crate 页面里。对于 license 字段，你需要一个 license 标识符值（license identifier value）
# Linux 基金会的 Software Package Data Exchange (SPDX)[http://spdx.org/licenses/] 列出了可以使用的标识符。例如，为了指定 crate 使用 MIT License，增加 MIT 标识符：
# Cargo 的文档【https://doc.rust-lang.org/cargo/】 描述了其他可以指定的元信息，他们可以帮助你的 crate 更容易被发现和使用！
# 发布 crate 时请多加小心，因为发布是 永久性的（permanent）。对应版本不可能被覆盖，其代码也不可能被删除。crates.io 的一个主要目标是作为一个存储代码的永久文档服务器，这样所有依赖 crates.io 中的 crate 的项目都能一直正常工作。而允许删除版本没办法达成这个目标。然而，可以被发布的版本号却没有限制。
# 当你修改了 crate 并准备好发布新版本时，改变 Cargo.toml 中 version 所指定的值。请使用 语义化版本规则 来根据修改的类型决定下一个版本号。接着运行 cargo publish 来上传新版本。
# 使用 cargo yank 从 Crates.io 撤回版本
version = 3

[[package]]
name = "guessing_game"
version = "0.1.0"
